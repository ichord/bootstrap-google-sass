// Mixins.less
// Snippets of reusable CSS to develop faster and keep code readable
// -----------------------------------------------------------------


// COMPONENT MIXINS
// --------------------------------------------------

// Navbar vertical align
// -------------------------
// Vertically center elements in the navbar or other bars.
// Example: an element has a height of 30px, so write out `@include navbarVerticalAlign(30px);` to calculate the appropriate top margin.
// Example: an element has a height of 30px and you want to vertically center it in a bar other than the navbar:
//          @include navbarVerticalAlign(32px, $navbarGoogleNavHeight);
@mixin navbarVerticalAlign($elementHeight, $barHeight: $navbarHeight) {
  margin-top: ($barHeight - $elementHeight) / 2;
}

// Override Twitter Bootstrap's mixin
@mixin nav-divider($top: #ebebeb, $bottom: $white) {
  // IE7 needs a set width since we gave a height. Restricting just
  // to IE7 to keep the 1px left/right space in other browsers.
  // It is unclear where IE is getting the extra space that we need
  // to negative-margin away, but so it goes.
  *width: 100%;
  height: 1px;
  margin: (($baseLineHeight / 2) - 1) 0; // 8px 0px
  *margin: -5px 0 5px;
  overflow: hidden;
  background-color: $top;
  border-bottom: 1px solid $bottom;
}

// Button backgrounds
// ------------------
@mixin btnBackground($startColor, $endColor, $textColor, $borderColor) {
  border: 1px solid $borderColor;
  color: $textColor;
  @include gradient-vertical($startColor, $endColor);
  *background-color: $startColor;
  @include reset-filter();

  // in these cases the gradient won't cover the background, so we override
  &:hover, &:active, &.active {
    border: 1px solid darken($borderColor, 5%);
    color: $textColor;
    @include gradient-vertical($startColor, darken($endColor, 5%));
    @include reset-filter();
    background-color: darken($endColor, 5%);
    background-color: darken($endColor, 5%) \9;
  }
  &:active, &.active {
    border: 1px solid darken($borderColor, 10%);
    @include gradient-vertical($startColor, darken($endColor, 10%));
    @include reset-filter();
  }
  &:focus {
    border: 1px solid $borderColor;
    @include box-shadow(inset 0 0 0 1px #fff);
  }
  &.disabled, &[disabled],
  &.disabled:hover, &[disabled]:hover,
  &.disabled:active, &[disabled]:active,
  &.disabled:focus, &[disabled]:focus {
    border: 1px solid $borderColor;
    @include gradient-vertical($startColor, $endColor);
    @include reset-filter();
    background-color: $startColor;
    background-color: $startColor \9;
  }
}

// copied from compass core to 
// overwrite bootstrap-sass's overwriting 
// of box-shadow
@mixin box-shadow($shadow-1: default, $shadow-2: false, $shadow-3: false, $shadow-4: false, $shadow-5: false, $shadow-6: false, $shadow-7: false, $shadow-8: false, $shadow-9: false, $shadow-10: false) {
  @if $shadow-1 == default {
    $shadow-1: -compass-space-list(compact(if($default-box-shadow-inset, inset, false), $default-box-shadow-h-offset, $default-box-shadow-v-offset, $default-box-shadow-blur, $default-box-shadow-spread, $default-box-shadow-color)); }
  $shadow: compact($shadow-1, $shadow-2, $shadow-3, $shadow-4, $shadow-5, $shadow-6, $shadow-7, $shadow-8, $shadow-9, $shadow-10);
  @include experimental(box-shadow, $shadow, -moz, -webkit, not -o, not -ms, not -khtml, official); }

$experimental-support-for-mozilla: true;
$experimental-support-for-webkit: true;
$experimental-support-for-gradients: true;
$experimental-support-for-microsoft: true;
$experimental-support-for-opera: true;


$experimental-support-for-khtml: false;
$experimental-support-for-svg: false;
$experimental-support-for-pie: false;

@mixin experimental($property, $value, $moz: $experimental-support-for-mozilla, $webkit: $experimental-support-for-webkit, $o: $experimental-support-for-opera, $ms: $experimental-support-for-microsoft, $khtml: $experimental-support-for-khtml, $official: true) {
  @if $webkit and $experimental-support-for-webkit {
    -webkit-#{$property}: $value; }
  @if $khtml and $experimental-support-for-khtml {
    -khtml-#{$property}: $value; }
  @if $moz and $experimental-support-for-mozilla {
    -moz-#{$property}: $value; }
  @if $ms and $experimental-support-for-microsoft {
    -ms-#{$property}: $value; }
  @if $o and $experimental-support-for-opera {
    -o-#{$property}: $value; }
  @if $official {
    #{$property}: $value; } }